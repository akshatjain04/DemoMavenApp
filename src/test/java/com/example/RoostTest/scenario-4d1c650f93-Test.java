/*
Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k

{
  background: null,
  rule: null,
  scenario: 'Find pet by tags","    Given the API running at http://petstore.swagger.io/v2","    When a GET request to /pet/findByTags is made","    And the tags parameter is test","    And the request expects json","    Then a 200 response is returned within 50ms","","',
  title: 'Find pet by tags","    Given the API running at http://petstore.swagger.io/v2","    When a GET request to /pet/findByTags is made","    And the tags parameter is test","    And the request expects json","    Then a 200 response is returned within 50ms","","'
}

*/
package com.example.RoostTest;

import io.restassured.RestAssured;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;
import org.junit.BeforeClass;
import org.junit.Test;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

import static org.junit.Assert.assertEquals;

public class FindPetByTagsGivenTheApiRunningAtHttpPetstoreSwaggerIoV2WhenAGetRequestToPetFindByTagsIsMadeAndTheTagsParameterIsTestAndTheRequestExpectsJsonThenA200ResponseIsReturnedWithin50MsTest {

    @BeforeClass
    public static void setup() {
        RestAssured.baseURI = System.getenv("API_HOST");
    }

    @Test
    public void findPetByTags() throws IOException {
        String file = "src\\test\\java\\com\\example\\RoostTest\\scenario-4d1c650f93-Test.csv";
        BufferedReader br = null;
        try {
            br = new BufferedReader(new FileReader(file));
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
        String line = "";
        br.readLine();
        while ((line = br.readLine()) != null) {
            // the value is split by delimiter
            String[] payload = line.split("\\^\\|\\^");
            if(payload[0].equalsIgnoreCase("GET")) {
                RequestSpecification httpRequest = RestAssured.given();
                httpRequest.header("Content-Type", "application/json");
                Response response = httpRequest.get(payload[1]+"?tags=test");
                assertEquals(200, response.getStatusCode());
                assertEquals("application/json", response.getContentType());
            }
        }
        br.close();
    }
}
