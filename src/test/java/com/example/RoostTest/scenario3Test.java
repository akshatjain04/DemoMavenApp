/*
Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k

{
  background: null,
  rule: null,
  scenario: 'Create pet with body","    Given the API running at http://petstore.swagger.io/v2","    When a POST request to /pet is made","    And the request body is","","      \\"\\"\\"","{","  \\"name\\": \\"doggie\\",","  \\"status\\": \\"available\\"","}","      \\"\\"\\"","","    Then a 200 response is returned within 50ms","    And the response body contains","    \\"\\"\\"","  \\"id\\":","    \\"\\"\\""],"stylingDirectives":[[{"start":0,"end":7,"cssClass":"pl-k"},{"start":8,"end":21,"cssClass":"pl-s"}],[],[{"start":2,"end":10,"cssClass":"pl-k"},{"start":11,"end":30,"cssClass":"pl-s"}],[{"start":4,"end":10,"cssClass":"pl-k"}],[{"start":4,"end":8,"cssClass":"pl-k"}],[{"start":4,"end":9,"cssClass":"pl-k"}],[{"start":4,"end":8,"cssClass":"pl-k"}],[{"start":4,"end":8,"cssClass":"pl-k"}],[{"start":4,"end":9,"cssClass":"pl-k"}],[],[{"start":2,"end":10,"cssClass":"pl-k"},{"start":11,"end":28,"cssClass":"pl-s"}],[{"start":4,"end":10,"cssClass":"pl-k"}],[{"start":4,"end":9,"cssClass":"pl-k"}],[{"start":4,"end":8,"cssClass":"pl-k"}],[{"start":4,"end":8,"cssClass":"pl-k"}],[{"start":4,"end":9,"cssClass":"pl-k"}],[],[{"start":2,"end":10,"cssClass":"pl-k"},{"start":11,"end":38,"cssClass":"pl-s"}],[{"start":4,"end":10,"cssClass":"pl-k"}],[{"start":4,"end":9,"cssClass":"pl-k"}],[{"start":4,"end":8,"cssClass":"pl-k"}],[{"start":4,"end":8,"cssClass":"pl-k"}],[{"start":4,"end":9,"cssClass":"pl-k"}],[],[{"start":2,"end":10,"cssClass":"pl-k"},{"start":11,"end":32,"cssClass":"pl-s"}],[{"start":4,"end":10,"cssClass":"pl-k"}],[{"start":4,"end":9,"cssClass":"pl-k"}],[{"start":4,"end":8,"cssClass":"pl-k"}],[],[{"start":6,"end":9,"cssClass":"pl-s"}],[{"start":0,"end":1,"cssClass":"pl-s"}],[{"start":0,"end":19,"cssClass":"pl-s"}],[{"start":0,"end":23,"cssClass":"pl-s"}],[{"start":0,"end":1,"cssClass":"pl-s"}],[{"start":0,"end":9,"cssClass":"pl-s"}],[],[{"start":4,"end":9,"cssClass":"pl-k"}],[{"start":4,"end":8,"cssClass":"pl-k"}],[{"start":4,"end":7,"cssClass":"pl-s"}],[{"start":0,"end":7,"cssClass":"pl-s"}],[{"start":0,"end":7,"cssClass":"pl-s"}],[]],"csv":null,"csvError":null,"dependabotInfo":{"showConfigurationBanner":false,"configFilePath":null,"networkDependabotPath":"/SmartBear/testserver-cucumber/network/updates","dismissConfigurationNoticePath":"/settings/dismiss-notice/dependabot_configuration_notice","configurationNoticeDismissed":null,"repoAlertsPath":"/SmartBear/testserver-cucumber/security/dependabot","repoSecurityAndAnalysisPath":"/SmartBear/testserver-cucumber/settings/security_analysis","repoOwnerIsOrg":true,"currentUserCanAdminRepo":false},"displayName":"petstore-imperative.feature","displayUrl":"https://github.com/SmartBear/testserver-cucumber/blob/master/modules/samples/src/test/resources/cucumber/petstore-imperative.feature?raw=true","headerInfo":{"blobSize":"1.15 KB","deleteInfo":{"deleteTooltip":"You must be signed in to make or propose changes"},"editInfo":{"editTooltip":"You must be signed in to make or propose changes"},"ghDesktopPath":"https://desktop.github.com","gitLfsPath":null,"onBranch":true,"shortPath":"e88aaf0","siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2FSmartBear%2Ftestserver-cucumber%2Fblob%2Fmaster%2Fmodules%2Fsamples%2Fsrc%2Ftest%2Fresources%2Fcucumber%2Fpetstore-imperative.feature","isCSV":false,"isRichtext":false,"toc":null,"lineInfo":{"truncatedLoc":"42","truncatedSloc":"35"},"mode":"file"},"image":false,"isCodeownersFile":null,"isPlain":false,"isValidLegacyIssueTemplate":false,"issueTemplateHelpUrl":"https://docs.github.com/articles/about-issue-and-pull-request-templates","issueTemplate":null,"discussionTemplate":null,"language":"Gherkin","languageID":76,"large":false,"loggedIn":false,"newDiscussionPath":"/SmartBear/testserver-cucumber/discussions/new","newIssuePath":"/SmartBear/testserver-cucumber/issues/new","planSupportInfo":{"repoIsFork":null,"repoOwnedByCurrentUser":null,"requestFullPath":"/SmartBear/testserver-cucumber/blob/master/modules/samples/src/test/resources/cucumber/petstore-imperative.feature","showFreeOrgGatedFeatureMessage":null,"showPlanSupportBanner":null,"upgradeDataAttributes":null,"upgradePath":null},"publishBannersInfo":{"dismissActionNoticePath":"/settings/dismiss-notice/publish_action_from_dockerfile","dismissStackNoticePath":"/settings/dismiss-notice/publish_stack_from_file","releasePath":"/SmartBear/testserver-cucumber/releases/new?marketplace=true","showPublishActionBanner":false,"showPublishStackBanner":false},"rawBlobUrl":"https://github.com/SmartBear/testserver-cucumber/raw/master/modules/samples/src/test/resources/cucumber/petstore-imperative.feature","renderImageOrRaw":false,"richText":null,"renderedFileInfo":null,"shortPath":null,"tabSize":8,"topBannersInfo":{"overridingGlobalFundingFile":false,"globalPreferredFundingPath":null,"repoOwner":"SmartBear","repoName":"testserver-cucumber","showInvalidCitationWarning":false,"citationHelpUrl":"https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/about-citation-files","showDependabotConfigurationBanner":false,"actionsOnboardingTip":null},"truncated":false,"viewable":true,"workflowRedirectUrl":null,"symbols":{"timed_out":false,"not_analyzed":true,"symbols":[]}},"copilotInfo":null,"copilotAccessAllowed":false,"csrf_tokens":{"/SmartBear/testserver-cucumber/branches":{"post":"As6ja4JffbKztTZQsfAGx9uL3YG0icu16HcCBQ9b1iGa6w6ih70jHc1LVUvGQSh7VRrjOu4YHBItVrQs4Lfr-g"},"/repos/preferences":{"post":"fr8GB-SEdaNvgbhR2Q_lreY1cj3QToq7_uYU3_odwwf9jcEm2UAGgjzLeimomBN8MAoHWzvUp3sQ9v3hSBVGuw"}}},"title":"testserver-cucumber/modules/samples/src/test/resources/cucumber/petstore-imperative.feature at master Â· SmartBear/testserver-cucumber","appPayload":{"helpUrl":"https://docs.github.com","findFileWorkerPath":"/assets-cdn/worker/find-file-worker-32bb159cc57c.js","findInFileWorkerPath":"/assets-cdn/worker/find-in-file-worker-c6704d501c10.js","githubDevUrl":null,"enabled_features":{"code_nav_ui_events":false,"copilot_conversational_ux":false,"copilot_conversational_ux_embedding_update":false,"copilot_popover_file_editor_header":false,"copilot_smell_icebreaker_ux":false,"react_blob_snake_symbols":false,"react_blob_chunk_separated_characters":false}}}</script>\n' +
    '  <div data-target="react-app.reactRoot"></div>\n' +
    '</react-app>\n' +
    '</turbo-frame>\n' +
    '\n' +
    '\n' +
    '\n' +
    '  </div>\n' +
    '\n' +
    '</turbo-frame>\n' +
    '\n' +
    '    </main>\n' +
    '  </div>\n' +
    '\n' +
    '  </div>\n' +
    '\n' +
    '          <footer class="footer p-responsive pt-8 pb-6 f6 color-fg-muted" role="contentinfo">\n' +
    "  <h2 class='sr-only'>Footer</h2>\n" +
    '\n' +
    '\n' +
    '  <div class="d-flex flex-justify-center flex-items-center flex-column-reverse flex-lg-row flex-wrap flex-lg-nowrap">\n' +
    '    <div class="d-flex flex-items-center mx-2">\n' +
    '      <a aria-label="Homepage" title="GitHub" class="footer-octicon mr-2" href="https://github.com">\n' +
    '        <svg aria-hidden="true" height="24" viewBox="0 0 16 16" version="1.1" width="24" data-view-component="true" class="octicon octicon-mark-github">\n' +
    '    <path d="M8 0c4.42 0 8 3.58 8 8a8.013 8.013 0 0 1-5.45 7.59c-.4.08-.55-.17-.55-.38 0-.27.01-1.13.01-2.2 0-.75-.25-1.23-.54-1.48 1.78-.2 3.65-.88 3.65-3.95 0-.88-.31-1.59-.82-2.15.08-.2.36-1.02-.08-2.12 0 0-.67-.22-2.2.82-.64-.18-1.32-.27-2-.27-.68 0-1.36.09-2 .27-1.53-1.03-2.2-.82-2.2-.82-.44 1.1-.16 1.92-.08 2.12-.51.56-.82 1.28-.82 2.15 0 3.06 1.86 3.75 3.64 3.95-.23.2-.44.55-.51 1.07-.46.21-1.61.55-2.33-.66-.15-.24-.6-.83-1.23-.82-.67.01-.27.38.01.53.34.19.73.9.82 1.13.16.45.68 1.31 2.69.94 0 .67.01 1.3.01 1.49 0 .21-.15.45-.55.38A7.995 7.995 0 0 1 0 8c0-4.42 3.58-8 8-8Z"></path>\n' +
    '</svg>\n' +
    '</a>\n' +
    '      <span>\n' +
    '        &copy; 2024 GitHub, Inc.\n' +
    '      </span>\n' +
    '    </div>\n' +
    '\n' +
    '    <nav aria-label="Footer">\n' +
    '      <h3 class="sr-only" id="sr-footer-heading">Footer navigation</h3>\n' +
    '\n' +
    '      <ul class="list-style-none d-flex flex-justify-center flex-wrap mb-2 mb-lg-0" aria-labelledby="sr-footer-heading">\n' +
    '\n' +
    '          <li class="mx-2">\n' +
    '            <a data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to Terms&quot;,&quot;label&quot;:&quot;text:terms&quot;}" href="https://docs.github.com/site-policy/github-terms/github-terms-of-service" data-view-component="true" class="Link--secondary Link">Terms</a>\n' +
    '          </li>\n' +
    '\n' +
    '          <li class="mx-2">\n' +
    '            <a data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to privacy&quot;,&quot;label&quot;:&quot;text:privacy&quot;}" href="https://docs.github.com/site-policy/privacy-policies/github-privacy-statement" data-view-component="true" class="Link--secondary Link">Privacy</a>\n' +
    '          </li>\n' +
    '\n' +
    '          <li class="mx-2">\n' +
    '            <a data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to security&quot;,&quot;label&quot;:&quot;text:security&quot;}" href="https://github.com/security" data-view-component="true" class="Link--secondary Link">Security</a>\n' +
    '          </li>\n' +
    '\n' +
    '          <li class="mx-2">\n' +
    '            <a data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to status&quot;,&quot;label&quot;:&quot;text:status&quot;}" href="https://www.githubstatus.com/" data-view-component="true" class="Link--secondary Link">Status</a>\n' +
    '          </li>\n' +
    '\n' +
    '          <li class="mx-2">\n' +
    '            <a data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to docs&quot;,&quot;label&quot;:&quot;text:docs&quot;}" href="https://docs.github.com" data-view-component="true" class="Link--secondary Link">Docs</a>\n' +
    '          </li>\n' +
    '\n' +
    '          <li class="mx-2">\n' +
    '            <a data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to contact&quot;,&quot;label&quot;:&quot;text:contact&quot;}" href="https://support.github.com?tags=dotcom-footer" data-view-component="true" class="Link--secondary Link">Contact</a>\n' +
    '          </li>\n' +
    '\n' +
    '          <li class="mx-2">\n' +
    '  <cookie-consent-link>\n' +
    '    <button type="button" class="Link--secondary underline-on-hover border-0 p-0 color-bg-transparent" data-action="click:cookie-consent-link#showConsentManagement">\n' +
    '      Mana'... 6111 more characters,
  title: 'Create pet with body","    Given the API running at http://petstore.swagger.io/v2","    When a POST request to /pet is made","    And the request body is","","      \\"\\"\\"","{","  \\"name\\": \\"doggie\\",","  \\"status\\": \\"available\\"","}","      \\"\\"\\"","","    Then a 200 response is returned within 50ms","    And the response body contains","    \\"\\"\\"","  \\"id\\":","    \\"\\"\\""],"stylingDirectives":[[{"start":0,"end":7,"cssClass":"pl-k"},{"start":8,"end":21,"cssClass":"pl-s"}],[],[{"start":2,"end":10,"cssClass":"pl-k"},{"start":11,"end":30,"cssClass":"pl-s"}],[{"start":4,"end":10,"cssClass":"pl-k"}],[{"start":4,"end":8,"cssClass":"pl-k"}],[{"start":4,"end":9,"cssClass":"pl-k"}],[{"start":4,"end":8,"cssClass":"pl-k"}],[{"start":4,"end":8,"cssClass":"pl-k"}],[{"start":4,"end":9,"cssClass":"pl-k"}],[],[{"start":2,"end":10,"cssClass":"pl-k"},{"start":11,"end":28,"cssClass":"pl-s"}],[{"start":4,"end":10,"cssClass":"pl-k"}],[{"start":4,"end":9,"cssClass":"pl-k"}],[{"start":4,"end":8,"cssClass":"pl-k"}],[{"start":4,"end":8,"cssClass":"pl-k"}],[{"start":4,"end":9,"cssClass":"pl-k"}],[],[{"start":2,"end":10,"cssClass":"pl-k"},{"start":11,"end":38,"cssClass":"pl-s"}],[{"start":4,"end":10,"cssClass":"pl-k"}],[{"start":4,"end":9,"cssClass":"pl-k"}],[{"start":4,"end":8,"cssClass":"pl-k"}],[{"start":4,"end":8,"cssClass":"pl-k"}],[{"start":4,"end":9,"cssClass":"pl-k"}],[],[{"start":2,"end":10,"cssClass":"pl-k"},{"start":11,"end":32,"cssClass":"pl-s"}],[{"start":4,"end":10,"cssClass":"pl-k"}],[{"start":4,"end":9,"cssClass":"pl-k"}],[{"start":4,"end":8,"cssClass":"pl-k"}],[],[{"start":6,"end":9,"cssClass":"pl-s"}],[{"start":0,"end":1,"cssClass":"pl-s"}],[{"start":0,"end":19,"cssClass":"pl-s"}],[{"start":0,"end":23,"cssClass":"pl-s"}],[{"start":0,"end":1,"cssClass":"pl-s"}],[{"start":0,"end":9,"cssClass":"pl-s"}],[],[{"start":4,"end":9,"cssClass":"pl-k"}],[{"start":4,"end":8,"cssClass":"pl-k"}],[{"start":4,"end":7,"cssClass":"pl-s"}],[{"start":0,"end":7,"cssClass":"pl-s"}],[{"start":0,"end":7,"cssClass":"pl-s"}],[]],"csv":null,"csvError":null,"dependabotInfo":{"showConfigurationBanner":false,"configFilePath":null,"networkDependabotPath":"/SmartBear/testserver-cucumber/network/updates","dismissConfigurationNoticePath":"/settings/dismiss-notice/dependabot_configuration_notice","configurationNoticeDismissed":null,"repoAlertsPath":"/SmartBear/testserver-cucumber/security/dependabot","repoSecurityAndAnalysisPath":"/SmartBear/testserver-cucumber/settings/security_analysis","repoOwnerIsOrg":true,"currentUserCanAdminRepo":false},"displayName":"petstore-imperative.feature","displayUrl":"https://github.com/SmartBear/testserver-cucumber/blob/master/modules/samples/src/test/resources/cucumber/petstore-imperative.feature?raw=true","headerInfo":{"blobSize":"1.15 KB","deleteInfo":{"deleteTooltip":"You must be signed in to make or propose changes"},"editInfo":{"editTooltip":"You must be signed in to make or propose changes"},"ghDesktopPath":"https://desktop.github.com","gitLfsPath":null,"onBranch":true,"shortPath":"e88aaf0","siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2FSmartBear%2Ftestserver-cucumber%2Fblob%2Fmaster%2Fmodules%2Fsamples%2Fsrc%2Ftest%2Fresources%2Fcucumber%2Fpetstore-imperative.feature","isCSV":false,"isRichtext":false,"toc":null,"lineInfo":{"truncatedLoc":"42","truncatedSloc":"35"},"mode":"file"},"image":false,"isCodeownersFile":null,"isPlain":false,"isValidLegacyIssueTemplate":false,"issueTemplateHelpUrl":"https://docs.github.com/articles/about-issue-and-pull-request-templates","issueTemplate":null,"discussionTemplate":null,"language":"Gherkin","languageID":76,"large":false,"loggedIn":false,"newDiscussionPath":"/SmartBear/testserver-cucumber/discussions/new","newIssuePath":"/SmartBear/testserver-cucumber/issues/new","planSupportInfo":{"repoIsFork":null,"repoOwnedByCurrentUser":null,"requestFullPath":"/SmartBear/testserver-cucumber/blob/master/modules/samples/src/test/resources/cucumber/petstore-imperative.feature","showFreeOrgGatedFeatureMessage":null,"showPlanSupportBanner":null,"upgradeDataAttributes":null,"upgradePath":null},"publishBannersInfo":{"dismissActionNoticePath":"/settings/dismiss-notice/publish_action_from_dockerfile","dismissStackNoticePath":"/settings/dismiss-notice/publish_stack_from_file","releasePath":"/SmartBear/testserver-cucumber/releases/new?marketplace=true","showPublishActionBanner":false,"showPublishStackBanner":false},"rawBlobUrl":"https://github.com/SmartBear/testserver-cucumber/raw/master/modules/samples/src/test/resources/cucumber/petstore-imperative.feature","renderImageOrRaw":false,"richText":null,"renderedFileInfo":null,"shortPath":null,"tabSize":8,"topBannersInfo":{"overridingGlobalFundingFile":false,"globalPreferredFundingPath":null,"repoOwner":"SmartBear","repoName":"testserver-cucumber","showInvalidCitationWarning":false,"citationHelpUrl":"https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/about-citation-files","showDependabotConfigurationBanner":false,"actionsOnboardingTip":null},"truncated":false,"viewable":true,"workflowRedirectUrl":null,"symbols":{"timed_out":false,"not_analyzed":true,"symbols":[]}},"copilotInfo":null,"copilotAccessAllowed":false,"csrf_tokens":{"/SmartBear/testserver-cucumber/branches":{"post":"As6ja4JffbKztTZQsfAGx9uL3YG0icu16HcCBQ9b1iGa6w6ih70jHc1LVUvGQSh7VRrjOu4YHBItVrQs4Lfr-g"},"/repos/preferences":{"post":"fr8GB-SEdaNvgbhR2Q_lreY1cj3QToq7_uYU3_odwwf9jcEm2UAGgjzLeimomBN8MAoHWzvUp3sQ9v3hSBVGuw"}}},"title":"testserver-cucumber/modules/samples/src/test/resources/cucumber/petstore-imperative.feature at master Â· SmartBear/testserver-cucumber","appPayload":{"helpUrl":"https://docs.github.com","findFileWorkerPath":"/assets-cdn/worker/find-file-worker-32bb159cc57c.js","findInFileWorkerPath":"/assets-cdn/worker/find-in-file-worker-c6704d501c10.js","githubDevUrl":null,"enabled_features":{"code_nav_ui_events":false,"copilot_conversational_ux":false,"copilot_conversational_ux_embedding_update":false,"copilot_popover_file_editor_header":false,"copilot_smell_icebreaker_ux":false,"react_blob_snake_symbols":false,"react_blob_chunk_separated_characters":false}}}</script>'
}

*/
package com.example.RoostTest;

import io.restassured.http.Headers;
import org.apache.commons.io.FileUtils;
import org.json.JSONArray;
import org.json.JSONObject;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import java.io.File;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.LinkedHashMap;
import java.util.Map;

import static io.restassured.RestAssured.given;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.CoreMatchers.notNullValue;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class scenario3Test {
    
    private static String env = System.getenv("API_HOST");
    private static String filePath = "scenario3Test.csv";
    
    private static Map<String, String> headers;

    @BeforeEach
    void setHeaders() {
        headers = new LinkedHashMap<>();
        headers.put("write:pets", "enabled");
        headers.put("read:pets", "enabled");
    }

    @AfterEach
    void clearHeaders() {
        headers.clear();
    }

    @Test
    @DisplayName("Create pet with body")
    void createPet() {
        readPayloadsFromFile().forEach(payload -> {
            JSONObject responseBody = new JSONObject(responseBody);
            given()
                .baseUri(env)
                .basePath("/v2/pet")
                .headers(new Headers(headers))
                .body(payload.getReqBody())
            .when()
                .post()
            .then()
                .statusCode(payload.getResponseCode())
                .body("name", is(notNullValue()))
                .body("status", is(notNullValue()))
                .body("id", is(notNullValue()));
        });        
    }

    private List<Payload> readPayloadsFromFile() {
        List<Payload> payloads = new ArrayList<>();
        File file = new File(filePath);
        if(file.exists() && file.canRead()) {
            try {
                String content = FileUtils.readFileToString(file, StandardCharsets.UTF_8);
                String[] lines = content.split("\\r?\\n");
                for (int i = 1; i < lines.length; i++) { // Skip the header
                    String[] elements = lines[i].split("\\^|\\^");
                    payloads.add(new Payload(
                            elements[0],
                            elements[1],
                            new JSONObject(elements[3]),
                            Integer.parseInt(elements[4]),
                            new JSONObject(elements[5])
                    ));
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        return payloads;
    }
    
    public class Payload {
        private String method;
        private String url;
        private JSONObject reqHeaders;
        private JSONObject reqBody;
        private int responseCode;
        private JSONArray responseBody;

        public Payload(String method, String url, JSONObject reqHeaders, JSONObject reqBody, int responseCode, JSONArray responseBody) {
            this.method = method;
            this.url = url;
            this.reqHeaders = reqHeaders;
            this.reqBody = reqBody;
            this.responseCode = responseCode;
            this.responseBody = responseBody;
        }

        public String getMethod() {
            return method;
        }

        public String getUrl() {
            return url;
        }

        public JSONObject getReqHeaders() {
            return reqHeaders;
        }

        public JSONObject getReqBody() {
            return reqBody;
        }

        public int getResponseCode() {
            return responseCode;
        }

        public JSONArray getResponseBody() {
            return responseBody;
        }
    }
}
