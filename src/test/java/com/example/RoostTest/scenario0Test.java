/*
Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k

{
  background: null,
  rule: null,
  scenario: 'Find pet by status","    Given the API running at http://petstore.swagger.io/v2","    And an endpoint of http://petstore.swagger.io/v2/pet/findByStatus","    When a GET request is made","    And the status parameter is test","    And the Accepts header is application/json","    Then a 200 response is returned within 50ms","","',
  title: 'Find pet by status","    Given the API running at http://petstore.swagger.io/v2","    And an endpoint of http://petstore.swagger.io/v2/pet/findByStatus","    When a GET request is made","    And the status parameter is test","    And the Accepts header is application/json","    Then a 200 response is returned within 50ms","","'
}

*/
package com.example.RoostTest;

import io.restassured.RestAssured;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Assertions;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import org.json.JSONObject;


public class scenario0Test {

    @Test
    public void findPetByStatus() throws IOException {
        
        String csvFile = "scenario0Test.csv";
        BufferedReader br = null;
        String line = "";
        String csvSplitBy = "\\^\\|\\^";
        br = new BufferedReader(new FileReader(csvFile));

        line = br.readLine();  // Ignoring the headers
        while ((line = br.readLine()) != null) {

            // use comma as separator
            String[] data = line.split(csvSplitBy,-1);

            String method = data[0].replace("\"","");
            String url = data[1].replace("\"","");
            JSONObject reqHeaders = new JSONObject(data[2].replace("\"", ""));
            JSONObject reqBody = data[3].equals("") ? null : new JSONObject(data[3].replace("\"", ""));
            int responseCode = Integer.parseInt(data[4].replace("\"",""));
            JSONObject resBody = new JSONObject(data[5].replace("\"", ""));

            // Specifying the base URL to the RESTful web service
            RestAssured.baseURI = url;

            // Get the RequestSpecification of the request that you want to send to the server.
            RequestSpecification httpRequest = RestAssured.given();

            // Setting request headers
            reqHeaders.keys().forEachRemaining(key -> {
                httpRequest.header(key, reqHeaders.get(key));
            });

            // Setting request payload
            if (reqBody != null) 
                httpRequest.body(reqBody.toString());

            // Making GET Request
            Response response = null;
            if(method.equals("GET")) {
                response = httpRequest.get();
            }
            else if(method.equals("POST")) {
                response = httpRequest.post();
            }
            else if(method.equals("PUT")) {
                response = httpRequest.put();
            }
            else if(method.equals("DELETE")) {
                response = httpRequest.delete();
            }

            // Asserting the response code
            Assertions.assertEquals(responseCode, response.getStatusCode());

            // Parsing the response body
            JSONObject responseBody = new JSONObject(response.getBody().asString());

            // Asserting the response body parameters
            resBody.keys().forEachRemaining(key -> {
                Assertions.assertEquals(resBody.get(key), responseBody.get(key));
            });
        }

        br.close();
    }
}
